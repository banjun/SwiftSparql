// generated by verbgen

fileprivate enum PrismSchema: IRIBaseProvider {
    static var base: IRIRef {return IRIRef(value: "https://prismdb.takanakahiko.me/prism-schema.ttl#")}
}

fileprivate enum RdfSchema: IRIBaseProvider {
    static var base: IRIRef {return IRIRef(value: "http://www.w3.org/1999/02/22-rdf-syntax-ns#")}
}

fileprivate enum RdfsSchema: IRIBaseProvider {
    static var base: IRIRef {return IRIRef(value: "http://www.w3.org/2000/01/rdf-schema#")}
}

public struct PrismCharacter: RDFTypeConvertible {
    public static var rdfType: IRIRef {return PrismSchema.rdfType("Character")}
}

extension TripleBuilder where State: TripleBuilderStateIncompleteSubjectType {
    public func rdfTypeIsPrismCharacter() -> TripleBuilder<TripleBuilderStateRDFTypeBound<PrismCharacter>> {return rdfType(is: PrismCharacter.self)}
}

public struct PrismSong: RDFTypeConvertible {
    public static var rdfType: IRIRef {return PrismSchema.rdfType("Song")}
}

extension TripleBuilder where State: TripleBuilderStateIncompleteSubjectType {
    public func rdfTypeIsPrismSong() -> TripleBuilder<TripleBuilderStateRDFTypeBound<PrismSong>> {return rdfType(is: PrismSong.self)}
}

public struct PrismEpisode: RDFTypeConvertible {
    public static var rdfType: IRIRef {return PrismSchema.rdfType("Episode")}
}

extension TripleBuilder where State: TripleBuilderStateIncompleteSubjectType {
    public func rdfTypeIsPrismEpisode() -> TripleBuilder<TripleBuilderStateRDFTypeBound<PrismEpisode>> {return rdfType(is: PrismEpisode.self)}
}

public struct PrismLive: RDFTypeConvertible {
    public static var rdfType: IRIRef {return PrismSchema.rdfType("Live")}
}

extension TripleBuilder where State: TripleBuilderStateIncompleteSubjectType {
    public func rdfTypeIsPrismLive() -> TripleBuilder<TripleBuilderStateRDFTypeBound<PrismLive>> {return rdfType(is: PrismLive.self)}
}

public struct PrismSeries: RDFTypeConvertible {
    public static var rdfType: IRIRef {return PrismSchema.rdfType("Series")}
}

extension TripleBuilder where State: TripleBuilderStateIncompleteSubjectType {
    public func rdfTypeIsPrismSeries() -> TripleBuilder<TripleBuilderStateRDFTypeBound<PrismSeries>> {return rdfType(is: PrismSeries.self)}
}

public struct PrismItem: RDFTypeConvertible {
    public static var rdfType: IRIRef {return PrismSchema.rdfType("Item")}
}

extension TripleBuilder where State: TripleBuilderStateIncompleteSubjectType {
    public func rdfTypeIsPrismItem() -> TripleBuilder<TripleBuilderStateRDFTypeBound<PrismItem>> {return rdfType(is: PrismItem.self)}
}

public struct PrismShop: RDFTypeConvertible {
    public static var rdfType: IRIRef {return PrismSchema.rdfType("Shop")}
}

extension TripleBuilder where State: TripleBuilderStateIncompleteSubjectType {
    public func rdfTypeIsPrismShop() -> TripleBuilder<TripleBuilderStateRDFTypeBound<PrismShop>> {return rdfType(is: PrismShop.self)}
}

public struct PrismTeam: RDFTypeConvertible {
    public static var rdfType: IRIRef {return PrismSchema.rdfType("Team")}
}

extension TripleBuilder where State: TripleBuilderStateIncompleteSubjectType {
    public func rdfTypeIsPrismTeam() -> TripleBuilder<TripleBuilderStateRDFTypeBound<PrismTeam>> {return rdfType(is: PrismTeam.self)}
}

public struct PrismBrand: RDFTypeConvertible {
    public static var rdfType: IRIRef {return PrismSchema.rdfType("Brand")}
}

extension TripleBuilder where State: TripleBuilderStateIncompleteSubjectType {
    public func rdfTypeIsPrismBrand() -> TripleBuilder<TripleBuilderStateRDFTypeBound<PrismBrand>> {return rdfType(is: PrismBrand.self)}
}

public extension TripleBuilder where State: TripleBuilderStateRDFTypeBoundType, State.RDFType == PrismCharacter {
    
}

public extension TripleBuilder where State: TripleBuilderStateRDFTypeBoundType, State.RDFType == PrismSong {
    
}

public extension TripleBuilder where State: TripleBuilderStateRDFTypeBoundType, State.RDFType == PrismEpisode {
    
}

public extension TripleBuilder where State: TripleBuilderStateRDFTypeBoundType, State.RDFType == PrismLive {
    
}

public extension TripleBuilder where State: TripleBuilderStateRDFTypeBoundType, State.RDFType == PrismSeries {
    
}

public extension TripleBuilder where State: TripleBuilderStateRDFTypeBoundType, State.RDFType == PrismItem {
    
}

public extension TripleBuilder where State: TripleBuilderStateRDFTypeBoundType, State.RDFType == PrismShop {
    
}

public extension TripleBuilder where State: TripleBuilderStateRDFTypeBoundType, State.RDFType == PrismTeam {
    
}

public extension TripleBuilder where State: TripleBuilderStateRDFTypeBoundType, State.RDFType == PrismBrand {
    
}